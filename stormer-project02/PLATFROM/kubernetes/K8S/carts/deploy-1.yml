apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/created-by: retail-store-sample
    app.kubernetes.io/type: app
  name: carts
  namespace: carts
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: service
      app.kubernetes.io/instance: carts
      app.kubernetes.io/name: carts
  template:
    metadata:
      annotations:
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "80801"
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/component: service
        app.kubernetes.io/created-by: retail-store-sample
        app.kubernetes.io/instance: carts
        app.kubernetes.io/name: carts
    spec:
      containers:
      - env:
        - name: JAVA_OPTS
          value: -XX:MaxRAMPercentage=75.0 -Djava.security.egd=file:/dev/urandom
        - name: SPRING_PROFILES_ACTIVE
          value: dynamodb
        envFrom:
        - configMapRef:
            name: carts
        image: public.ecr.aws/aws-containers/retail-store-sample-cart:0.2.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 3
        name: carts
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        resources:
          limits:
            memory: 512Mi
          requests:
            cpu: 128m
            memory: 512Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /tmp
          name: tmp-volume
      securityContext:
        fsGroup: 1000
      serviceAccountName: carts
      volumes:
      - emptyDir:
          medium: Memory
        name: tmp-volume